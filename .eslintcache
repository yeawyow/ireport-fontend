[{"D:\\fontend\\ireport-fontend\\src\\index.js":"1","D:\\fontend\\ireport-fontend\\src\\App.js":"2","D:\\fontend\\ireport-fontend\\src\\reportWebVitals.js":"3","D:\\fontend\\ireport-fontend\\src\\reducers\\index.js":"4","D:\\fontend\\ireport-fontend\\src\\actions\\login.action.js":"5","D:\\fontend\\ireport-fontend\\src\\componets\\pages\\JobserviceEdit.js":"6","D:\\fontend\\ireport-fontend\\src\\componets\\pages\\Jobservice.js":"7","D:\\fontend\\ireport-fontend\\src\\componets\\pages\\Login.js":"8","D:\\fontend\\ireport-fontend\\src\\componets\\pages\\JobserviceCreate.js":"9","D:\\fontend\\ireport-fontend\\src\\componets\\pages\\fragments\\Header.js":"10","D:\\fontend\\ireport-fontend\\src\\componets\\pages\\fragments\\Menu.js":"11","D:\\fontend\\ireport-fontend\\src\\reducers\\login.reducer.js":"12","D:\\fontend\\ireport-fontend\\src\\Constants.js":"13","D:\\fontend\\ireport-fontend\\src\\utils\\HttpClient.js":"14"},{"size":889,"mtime":1626014396077,"results":"15","hashOfConfig":"16"},{"size":2733,"mtime":1626017153160,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1626014396077,"results":"18","hashOfConfig":"16"},{"size":142,"mtime":1626014396077,"results":"19","hashOfConfig":"16"},{"size":1732,"mtime":1626014396061,"results":"20","hashOfConfig":"16"},{"size":194,"mtime":1626014396077,"results":"21","hashOfConfig":"16"},{"size":154,"mtime":1626014396061,"results":"22","hashOfConfig":"16"},{"size":3443,"mtime":1626018047734,"results":"23","hashOfConfig":"16"},{"size":169,"mtime":1626014396061,"results":"24","hashOfConfig":"16"},{"size":2198,"mtime":1626014396077,"results":"25","hashOfConfig":"16"},{"size":3639,"mtime":1626014396077,"results":"26","hashOfConfig":"16"},{"size":663,"mtime":1626014396077,"results":"27","hashOfConfig":"16"},{"size":1583,"mtime":1626014396061,"results":"28","hashOfConfig":"16"},{"size":907,"mtime":1626014396077,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"10tc43g",{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"33"},"D:\\fontend\\ireport-fontend\\src\\index.js",["64"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport reducers from \"./reducers\";\r\nimport { Provider } from \"react-redux\";\r\nvar middlewares = (middlewares = applyMiddleware(thunk,logger));\r\n\r\nconst store = createStore(reducers, middlewares);\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n     <Provider store={store}>\r\n        <App />\r\n     </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["65","66"],"D:\\fontend\\ireport-fontend\\src\\App.js",["67","68"],"D:\\fontend\\ireport-fontend\\src\\reportWebVitals.js",[],"D:\\fontend\\ireport-fontend\\src\\reducers\\index.js",[],"D:\\fontend\\ireport-fontend\\src\\actions\\login.action.js",["69","70","71"],"import {\r\n    LOGIN_FETCHING,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAILED,\r\n    LOGIN_STATUS,\r\n    LOGOUT,\r\n    server\r\n \r\n  } from \"../Constants\";\r\n  import { httpClient } from './../utils/HttpClient'\r\n  \r\n  export const setStateToFetching = () => ({\r\n    type: LOGIN_FETCHING\r\n  });\r\n  \r\n  export const setStateToSuccess = payload => ({\r\n    type: LOGIN_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const setStateToFailed = payload => ({\r\n    type: LOGIN_FAILED,\r\n    payload\r\n  });\r\n  \r\n  export const setStateToLogout = () => ({\r\n    type: LOGOUT\r\n  });\r\n  \r\n  export const login = ({ username, passwordjwt, history }) => {\r\n  \r\n    return async dispatch => {\r\n      dispatch(setStateToFetching());\r\n      const result = await httpClient.post(server.LOGIN_URL, {\r\n        username,\r\n        passwordjwt\r\n      });\r\n      if(result.data.result==\"ok\"){\r\n        localStorage.setItem(LOGIN_STATUS, \"ok\")\r\n         dispatch(setStateToSuccess(result.data.result));\r\n         history.push(\"/jobservice\")\r\n      }else{\r\n        localStorage.setItem(LOGIN_STATUS,\"nok\")\r\n        dispatch(setStateToFailed(result.data.message));\r\n      }\r\n    \r\n    //  alert(JSON.stringify(result.data))\r\n    };\r\n  };\r\n  \r\n  export const isLoggedIn=()=>{\r\n    const loginStatus = localStorage.getItem(LOGIN_STATUS)\r\n   return loginStatus==\"ok\"\r\n    \r\n  }\r\n  export const reLogin=()=>{\r\n    return dispatch=>{\r\n      const loginStatus = localStorage.getItem(LOGIN_STATUS)\r\n      if (loginStatus==\"ok\"){\r\n        dispatch(setStateToSuccess({}))\r\n      }\r\n    }\r\n  }\r\n\r\n  export const logout = ({ history }) => {\r\n    return dispatch => {\r\n      localStorage.removeItem(LOGIN_STATUS)\r\n      dispatch(setStateToLogout());\r\n      history.push(\"/\");\r\n    };\r\n  };\r\n  ","D:\\fontend\\ireport-fontend\\src\\componets\\pages\\JobserviceEdit.js",[],"D:\\fontend\\ireport-fontend\\src\\componets\\pages\\Jobservice.js",[],"D:\\fontend\\ireport-fontend\\src\\componets\\pages\\Login.js",["72","73","74","75","76","77","78"],"D:\\fontend\\ireport-fontend\\src\\componets\\pages\\JobserviceCreate.js",[],"D:\\fontend\\ireport-fontend\\src\\componets\\pages\\fragments\\Header.js",[],"D:\\fontend\\ireport-fontend\\src\\componets\\pages\\fragments\\Menu.js",["79","80","81"],"import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nexport default function Menu(props) {\r\n    const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n \r\n    return (\r\n        <div>\r\n         <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={props.open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={props.handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <img \r\n         height={250}\r\n         src={`${process.env.PUBLIC_URL}/images/head.jpg`}\r\n        />\r\n        \r\n        <Divider />\r\n        <List>\r\n         <ListItem\r\n          component={NavLink}\r\n          to=\"/jobservice\"\r\n          button\r\n          key=\"jobservice\"\r\n          activeClassName={classes.isActive}\r\n         />\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n        </div>\r\n    )\r\n}\r\n","D:\\fontend\\ireport-fontend\\src\\reducers\\login.reducer.js",["82"],"import {\r\n  LOGIN_FAILED,\r\n  LOGIN_FETCHING,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT\r\n} from \"./../Constants\";\r\n\r\nconst initialState = {\r\n  result: null,\r\n  isFetching: false,\r\n  error: false\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case LOGIN_FETCHING:\r\n      return { ...state, isFetching: true, error: false, result: null };\r\n    case LOGIN_FAILED:\r\n      return { ...state, isFetching: false, error: true, result: payload };\r\n    case LOGIN_SUCCESS:\r\n      return { ...state, isFetching: false, error: false, result: payload };\r\n    case LOGOUT:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\fontend\\ireport-fontend\\src\\Constants.js",[],"D:\\fontend\\ireport-fontend\\src\\utils\\HttpClient.js",["83"],"import axios from \"axios\";\r\nimport join from \"url-join\";\r\nimport {\r\n  server,\r\n  apiUrl,\r\n  NOT_CONNECT_NETWORK,\r\n  NETWORK_CONNECTION_MESSAGE\r\n} from \"../Constants\";\r\n\r\nconst isAbsoluteURLRegex = /^(?:\\w+:)\\/\\//;\r\n\r\naxios.interceptors.request.use(async config => {\r\n  if (!isAbsoluteURLRegex.test(config.url)) {\r\n    config.url = join(apiUrl, config.url);\r\n  }\r\n  config.timeout = 10000; // 10 Second\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n  response => {\r\n    return response;\r\n  },\r\n  error => {\r\n    debugger;\r\n    console.log(JSON.stringify(error, undefined, 2));\r\n    if (axios.isCancel(error)) {\r\n      return Promise.reject(error);\r\n    } else if (!error.response) {\r\n      return Promise.reject({\r\n        code: NOT_CONNECT_NETWORK,\r\n        message: NETWORK_CONNECTION_MESSAGE\r\n      });\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const httpClient = axios;\r\n",{"ruleId":"84","severity":1,"message":"85","line":11,"column":20,"nodeType":"86","messageId":"87","endLine":11,"endColumn":31},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":1,"column":17,"nodeType":"86","messageId":"94","endLine":1,"endColumn":26},{"ruleId":"95","severity":1,"message":"96","line":70,"column":6,"nodeType":"97","endLine":70,"endColumn":8,"suggestions":"98"},{"ruleId":"99","severity":1,"message":"100","line":38,"column":28,"nodeType":"101","messageId":"102","endLine":38,"endColumn":30},{"ruleId":"99","severity":1,"message":"100","line":53,"column":22,"nodeType":"101","messageId":"102","endLine":53,"endColumn":24},{"ruleId":"99","severity":1,"message":"100","line":59,"column":22,"nodeType":"101","messageId":"102","endLine":59,"endColumn":24},{"ruleId":"92","severity":1,"message":"103","line":10,"column":8,"nodeType":"86","messageId":"94","endLine":10,"endColumn":11},{"ruleId":"92","severity":1,"message":"104","line":15,"column":13,"nodeType":"86","messageId":"94","endLine":15,"endColumn":25},{"ruleId":"92","severity":1,"message":"105","line":17,"column":10,"nodeType":"86","messageId":"94","endLine":17,"endColumn":15},{"ruleId":"92","severity":1,"message":"106","line":40,"column":8,"nodeType":"86","messageId":"94","endLine":40,"endColumn":15},{"ruleId":"92","severity":1,"message":"107","line":40,"column":17,"nodeType":"86","messageId":"94","endLine":40,"endColumn":27},{"ruleId":"92","severity":1,"message":"108","line":44,"column":7,"nodeType":"86","messageId":"94","endLine":44,"endColumn":15},{"ruleId":"92","severity":1,"message":"109","line":45,"column":7,"nodeType":"86","messageId":"94","endLine":45,"endColumn":19},{"ruleId":"92","severity":1,"message":"110","line":79,"column":10,"nodeType":"86","messageId":"94","endLine":79,"endColumn":14},{"ruleId":"92","severity":1,"message":"111","line":79,"column":16,"nodeType":"86","messageId":"94","endLine":79,"endColumn":23},{"ruleId":"112","severity":1,"message":"113","line":98,"column":9,"nodeType":"114","endLine":101,"endColumn":11},{"ruleId":"115","severity":1,"message":"116","line":14,"column":1,"nodeType":"117","endLine":27,"endColumn":3},{"ruleId":"92","severity":1,"message":"118","line":4,"column":3,"nodeType":"86","messageId":"94","endLine":4,"endColumn":9},"no-use-before-define","'middlewares' was used before it was defined.","Identifier","usedBeforeDefined","no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'useEffect' is defined but never used.","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["121"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Box' is defined but never used.","'loginActions' is defined but never used.","'Alert' is defined but never used.","'account' is assigned a value but never used.","'setAccount' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'loginReducer' is assigned a value but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'server' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},"Update the dependencies array to be: [dispatch]",{"range":"124","text":"125"},[1859,1861],"[dispatch]"]